{"name": "test_equal_31_149[hcodes1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 130\n  -0\n  +130", "trace": "connection = <cursor object at 0x03AA31A8; closed: 0>, hcodes = ('00149', '00155', '00026', 46)\nhcode_id_31_149_eq_1 = 'create or replace function public.lilo_auto_qa() returns table(cnt int8)\\nlanguage plpgsql\\nas $f$\\nbegin\\n\\tdrop tab...uch_id\\n\\t\\tand a.vids_id = b.vids_id \\n\\t\\tand a.kato_id = b.kato_id \\n\\t\\tand a.dir_id = b.dir_id\\n\\t;\\nend;\\n$f$\\n;'\nhcode_id_31_149_eq_2 = \"select count(0) from dm_rep.dm_all_indicators_v\\nwhere hcode_id = %s\\nand calc_rule = 'ratio'\\n--and dt in ()\\nunion all\\nselect * from public.lilo_auto_qa();\"\n\n    @allure.feature('Вес_вагона. Темп роста производетельности труда')\n    @allure.story('Сравнение всех записей')\n    @allure.severity('critical')\n    @pytest.mark.parametrize('hcodes', HCODES_AND_UNIT)\n    def test_equal_31_149(connection, hcodes, hcode_id_31_149_eq_1, hcode_id_31_149_eq_2):\n        connection.execute(hcode_id_31_149_eq_1, (hcodes[1], hcodes[2]))\n        connection.execute(hcode_id_31_149_eq_2, (hcodes[0],))\n        lines = connection.fetchall()\n        connection.execute('drop function public.lilo_auto_qa();')\n    \n>       assert lines[0][0] == lines[1][0]\nE       assert 0 == 130\nE         -0\nE         +130\n\ntest_income.py:85: AssertionError"}, "parameters": [{"name": "hcodes", "value": "('00149', '00155', '00026', 46)"}], "start": 1604829248338, "stop": 1604829272089, "uuid": "0f915ceb-b251-4a4d-bc1d-205876b6e9a1", "historyId": "ba4b7143c1f5d1c4b0b1d4dea7ad4010", "testCaseId": "3614dfb5b18de0eabd46a966ced7e762", "fullName": "test_income#test_equal_31_149", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Вес_вагона. Темп роста производетельности труда"}, {"name": "story", "value": "Сравнение всех записей"}, {"name": "suite", "value": "test_income"}, {"name": "host", "value": "62032-nb"}, {"name": "thread", "value": "13564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_income"}]}