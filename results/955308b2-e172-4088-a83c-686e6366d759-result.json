{"name": "test_income_empty[query12]", "status": "passed", "parameters": [{"name": "query", "value": "(\"create or replace function public.lilo_auto_qa() \\n\\treturns table(\\thcode_id bpchar, hcode_name varchar(300), hcode_unit_name varchar(30), org_id int8, dor_kod int8, \\n\\t\\t\\t\\t\\tdate_type_id int8, metric_type_id int8, cargo_type_id int8, val_type_id int8, unit_id int8, dt date, \\n\\t\\t\\t\\t\\tvalue float8, duch_id int8, nod_id int8, dir_id int8, kato_id int8, vids_id int8)\\nlanguage plpgsql\\nas $f$\\nbegin\\n    drop table if exists public.la_qa1;\\n    drop table if exists public.la_qa2;\\n    drop table if exists public.la_qa3;\\n\\tdrop table if exists public.la_qa4;\\n\\tdrop table if exists public.la_qa5;\\n\\tdrop table if exists public.la_qa6;\\n\\tcreate table public.la_qa1 as\\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00109') and a.metric_type_id = 1;\\n\\tcreate table public.la_qa2 as\\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00111') and a.metric_type_id = 1;\\n\\tcreate table public.la_qa3 as \\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00168') and a.metric_type_id = 1;\\n\\tcreate table public.la_qa4 as\\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00169') and a.metric_type_id = 1;\\n\\tcreate table public.la_qa5 as\\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00170') and a.metric_type_id = 1; \\n\\tcreate table public.la_qa6 as\\n\\t\\tselect * from dm_rep.dm_all_indicators_v a where a.hcode_id in ('00154') and a.metric_type_id = 17; \\n\\treturn query\\nselect '00341'::bpchar as hcode_id, hcd.name as hcode_name, hcd.unit_name as hcode_unit_name, abcde.org_id, abcde.dor_kod, \\n  \\t\\tabcde.date_type_id, abcde.metric_type_id, abcde.cargo_type_id, abcde.val_type_id, 138::int8 as unit_id, abcde.dt, \\n  \\t\\t((((abcde.value/60)/nullif(f.value,0))*1000000)::numeric(20,6))::float8 as value, \\n  \\t\\tabcde.duch_id, abcde.nod_id, abcde.dir_id, abcde.kato_id, abcde.vids_id\\nfrom ( \\nselect  \\ncoalesce (abcd.org_id, e.org_id)::int8 as org_id,  \\ncoalesce (abcd.dor_kod, e.dor_kod)::int8 as dor_kod,  \\ncoalesce (abcd.date_type_id, e.date_type_id)::int8 as date_type_id, \\ncoalesce (abcd.metric_type_id, e.metric_type_id)::int8 as metric_type_id, \\ncoalesce (abcd.cargo_type_id, e.cargo_type_id)::int8 as cargo_type_id, \\ncoalesce (abcd.val_type_id, e.val_type_id)::int8 as val_type_id, \\ncoalesce (abcd.dt, e.dt)::date as dt, \\n(abcd.value+e.value)::float8 as value,\\ncoalesce (abcd.duch_id, e.duch_id)::int8 as duch_id, \\ncoalesce (abcd.nod_id, e.nod_id)::int8 as nod_id, \\ncoalesce (abcd.dir_id, e.dir_id)::int8 as dir_id, \\ncoalesce (abcd.kato_id, e.kato_id)::int8 as kato_id, \\ncoalesce (abcd.vids_id, e.vids_id)::int8 as vids_id\\nfrom(\\nselect  \\ncoalesce (abc.org_id, d.org_id) as org_id,\\ncoalesce (abc.dor_kod, d.dor_kod) as dor_kod,\\ncoalesce (abc.date_type_id, d.date_type_id) as date_type_id, \\ncoalesce (abc.metric_type_id, d.metric_type_id) as metric_type_id, \\ncoalesce (abc.cargo_type_id, d.cargo_type_id) as cargo_type_id, \\ncoalesce (abc.val_type_id, d.val_type_id) as val_type_id, \\ncoalesce (abc.dt, d.dt) as dt, \\n(abc.value+d.value)::float8 as value,\\ncoalesce (abc.duch_id, d.duch_id) as duch_id, \\ncoalesce (abc.nod_id, d.nod_id) as nod_id, \\ncoalesce (abc.dir_id, d.dir_id) as dir_id, \\ncoalesce (abc.kato_id, d.kato_id) as kato_id, \\ncoalesce (abc.vids_id, d.vids_id) as vids_id\\nfrom(\\nselect  \\ncoalesce (ab.org_id, c.org_id) as org_id,\\ncoalesce (ab.dor_kod, c.dor_kod) as dor_kod,\\ncoalesce (ab.date_type_id, c.date_type_id) as date_type_id, \\ncoalesce (ab.metric_type_id, c.metric_type_id) as metric_type_id, \\ncoalesce (ab.cargo_type_id, c.cargo_type_id) as cargo_type_id, \\ncoalesce (ab.val_type_id, c.val_type_id) as val_type_id, \\ncoalesce (ab.dt, c.dt) as dt, \\n(ab.value+c.value)::float8 as value,\\ncoalesce (ab.duch_id, c.duch_id) as duch_id, \\ncoalesce (ab.nod_id, c.nod_id) as nod_id, \\ncoalesce (ab.dir_id, c.dir_id) as dir_id, \\ncoalesce (ab.kato_id, c.kato_id) as kato_id, \\ncoalesce (ab.vids_id, c.vids_id) as vids_id\\nfrom(\\nselect\\ncoalesce (a.org_id, b.org_id) as org_id, \\ncoalesce (a.dor_kod, b.dor_kod) as dor_kod,  \\ncoalesce (a.date_type_id, b.date_type_id) as date_type_id, \\ncoalesce (a.metric_type_id, b.metric_type_id) as metric_type_id, \\ncoalesce (a.cargo_type_id, b.cargo_type_id) as cargo_type_id, \\ncoalesce (a.val_type_id, b.val_type_id) as val_type_id, \\ncoalesce (a.dt, b.dt) as dt, \\n(a.value+b.value)::float8 as value,\\ncoalesce (a.duch_id, b.duch_id) as duch_id, \\ncoalesce (a.nod_id, b.nod_id) as nod_id, \\ncoalesce (a.dir_id, b.dir_id) as dir_id, \\ncoalesce (a.kato_id, b.kato_id) as kato_id, \\ncoalesce (a.vids_id, b.vids_id) as vids_id\\nfrom public.la_qa1 a\\n full join public.la_qa2 b\\n\\t\\ton \\ta.org_id = b.org_id\\n\\t\\tand a.date_type_id = b.date_type_id\\n\\t\\tand a.cargo_type_id = b.cargo_type_id\\n\\t\\tand a.val_type_id = b.val_type_id\\n\\t\\tand a.dt = b.dt\\n\\t\\tand a.nod_id = b.nod_id\\n\\t\\tand a.duch_id = b.duch_id\\n\\t\\tand a.vids_id = b.vids_id \\n\\t\\tand a.kato_id = b.kato_id \\n\\t\\tand a.dir_id = b.dir_id) ab\\n\\tfull join public.la_qa3 c\\n\\t\\ton \\tab.org_id = c.org_id\\n\\t\\tand ab.date_type_id = c.date_type_id\\n\\t\\tand ab.cargo_type_id = c.cargo_type_id\\n\\t\\tand ab.val_type_id = c.val_type_id\\n\\t\\tand ab.dt = c.dt\\n\\t\\tand ab.nod_id = c.nod_id\\n\\t\\tand ab.duch_id = c.duch_id\\n\\t\\tand ab.vids_id = c.vids_id \\n\\t\\tand ab.kato_id = c.kato_id \\n\\t\\tand ab.dir_id = c.dir_id) abc\\n\\tfull join public.la_qa4 d\\n\\t\\ton \\tabc.org_id = d.org_id\\n\\t\\tand abc.date_type_id = d.date_type_id\\n\\t\\tand abc.cargo_type_id = d.cargo_type_id\\n\\t\\tand abc.val_type_id = d.val_type_id\\n\\t\\tand abc.dt = d.dt\\n\\t\\tand abc.nod_id = d.nod_id\\n\\t\\tand abc.duch_id = d.duch_id\\n\\t\\tand abc.vids_id = d.vids_id \\n\\t\\tand abc.kato_id = d.kato_id \\n\\t\\tand abc.dir_id = d.dir_id) abcd\\n\\tfull join public.la_qa5 e\\n\\t\\ton \\tabcd.org_id = e.org_id\\n\\t\\tand abcd.date_type_id = e.date_type_id\\n\\t\\tand abcd.cargo_type_id = e.cargo_type_id\\n\\t\\tand abcd.val_type_id = e.val_type_id\\n\\t\\tand abcd.dt = e.dt\\n\\t\\tand abcd.nod_id = e.nod_id\\n\\t\\tand abcd.duch_id = e.duch_id\\n\\t\\tand abcd.vids_id = e.vids_id \\n\\t\\tand abcd.kato_id = e.kato_id \\n\\t\\tand abcd.dir_id = e.dir_id) abcde\\n\\tjoin public.la_qa6 f\\n\\t\\ton \\tabcde.org_id = f.org_id\\n\\t\\tand abcde.date_type_id = f.date_type_id\\n\\t\\tand abcde.cargo_type_id = f.cargo_type_id\\n\\t\\tand abcde.val_type_id = f.val_type_id\\n\\t\\tand abcde.dt = f.dt\\n\\t\\tand abcde.nod_id = f.nod_id\\n\\t\\tand abcde.duch_id = f.duch_id\\n\\t\\tand abcde.vids_id = f.vids_id \\n\\t\\tand abcde.kato_id = f.kato_id \\n\\t\\tand abcde.dir_id = f.dir_id\\ncross join (select * from dm.d_hcode_t where id = '00341') hcd\\n    ;\\nend;\\n$f$\\n;\", \"select * from public.lilo_auto_qa()\\nexcept\\nselect  hcode_id, hcode_name, hcode_unit_name, org_id, dor_kod, date_type_id, metric_type_id, cargo_type_id, val_type_id, unit_id, dt, \\n\\t\\tvalue::numeric(20,6), duch_id, nod_id, dir_id, kato_id, vids_id from dm_rep.dm_all_indicators_v\\nwhere hcode_id = '00341'\\nand calc_rule = 'ratio'\")"}], "start": 1604831360553, "stop": 1604831370816, "uuid": "383b2ce1-516f-455b-b13b-684fae772956", "historyId": "9fb5a8c2b2ec587599c05a8e2e7d2ed5", "testCaseId": "5ad748bc6397600d7a3451f4d7068b8d", "fullName": "test_income#test_income_empty", "labels": [{"name": "feature", "value": "Расчетные показатели"}, {"name": "story", "value": "Полная сверка"}, {"name": "severity", "value": "critical"}, {"name": "suite", "value": "test_income"}, {"name": "host", "value": "62032-nb"}, {"name": "thread", "value": "13564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_income"}]}