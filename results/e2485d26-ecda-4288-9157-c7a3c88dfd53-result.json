{"name": "test_equeal[hcodes11]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 884 == 17043\n  -884\n  +17043", "trace": "connection = <cursor object at 0x03B7B128; closed: 0>, hcodes = ('00018', '00154', '00150')\nquery_3_01 = 'create or replace function public.lilo_auto_qa() returns table(cnt int8)\\nlanguage plpgsql\\nas $f$\\nbegin\\n\\tdrop tab...uch_id\\n\\t\\tand a.vids_id = b.vids_id \\n\\t\\tand a.kato_id = b.kato_id \\n\\t\\tand a.dir_id = b.dir_id\\n\\t;\\nend;\\n$f$\\n;'\nquery_3_02 = \"select count(0) from dm_rep.dm_all_indicators_v\\nwhere hcode_id = %s\\nand calc_rule = 'ratio'\\n--and dt in ()\\nunion all\\nselect * from public.lilo_auto_qa();\"\n\n    @allure.feature('Расчетные показатели')\n    @allure.story('Сравнение всех записей')\n    @allure.severity('critical')\n    @pytest.mark.parametrize('hcodes', hcodes)\n    def test_equeal(connection, hcodes, query_3_01, query_3_02):\n        connection.execute(query_3_01, (hcodes[0], hcodes[1]))\n        connection.execute(query_3_02,(hcodes[2],))\n        lines = connection.fetchall()\n        connection.execute('drop function public.lilo_auto_qa();')\n    \n>       assert lines[0][0] == lines[1][0]\nE       assert 884 == 17043\nE         -884\nE         +17043\n\ntest_income.py:30: AssertionError"}, "attachments": [{"name": "stdout", "source": "2c7dc6fd-bcb4-4523-8ead-69ac4784b120-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "hcodes", "value": "('00018', '00154', '00150')"}], "start": 1604502134962, "stop": 1604502161565, "uuid": "ba16e356-2c11-4914-b8a0-0b0dbac4689e", "historyId": "6cc9acca58e90d20f0cf04654b540521", "testCaseId": "ebc20a52d406f58ce804aa6358c83fc7", "fullName": "test_income#test_equeal", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Расчетные показатели"}, {"name": "story", "value": "Сравнение всех записей"}, {"name": "suite", "value": "test_income"}, {"name": "host", "value": "62032-nb"}, {"name": "thread", "value": "1768-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_income"}]}